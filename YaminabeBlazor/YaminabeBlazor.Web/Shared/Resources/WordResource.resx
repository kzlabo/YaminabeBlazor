<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>追加</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>住所</value>
  </data>
  <data name="Brand" xml:space="preserve">
    <value>ブランド</value>
  </data>
  <data name="Brand_Master" xml:space="preserve">
    <value>ブランドマスタ</value>
  </data>
  <data name="Calc" xml:space="preserve">
    <value>計算</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>カテゴリ</value>
  </data>
  <data name="Category_Master" xml:space="preserve">
    <value>カテゴリマスタ</value>
  </data>
  <data name="CautionInfo" xml:space="preserve">
    <value>警告情報</value>
  </data>
  <data name="Ceo" xml:space="preserve">
    <value>代表者</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>コード</value>
  </data>
  <data name="CollectionDate" xml:space="preserve">
    <value>回収日</value>
  </data>
  <data name="CollectionDateType" xml:space="preserve">
    <value>回収日区分</value>
  </data>
  <data name="CollectionDateTypeName" xml:space="preserve">
    <value>回収日区分名</value>
  </data>
  <data name="Commit" xml:space="preserve">
    <value>確定</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>完了</value>
  </data>
  <data name="CompleteInfo" xml:space="preserve">
    <value>完了情報</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>確認</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>作成</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>得意先</value>
  </data>
  <data name="CustomerId" xml:space="preserve">
    <value>得意先コード</value>
  </data>
  <data name="CustomerKanaName" xml:space="preserve">
    <value>得意先名カナ</value>
  </data>
  <data name="CustomerName" xml:space="preserve">
    <value>得意先名</value>
  </data>
  <data name="CustomerShortName" xml:space="preserve">
    <value>得意先略名</value>
  </data>
  <data name="Customer_Master" xml:space="preserve">
    <value>得意先マスタ</value>
  </data>
  <data name="CutoffDate" xml:space="preserve">
    <value>締日</value>
  </data>
  <data name="CutoffDateType" xml:space="preserve">
    <value>締日区分</value>
  </data>
  <data name="CutoffDateTypeName" xml:space="preserve">
    <value>締日区分名</value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>データ</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="Detail" xml:space="preserve">
    <value>詳細</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>編集</value>
  </data>
  <data name="EditMode" xml:space="preserve">
    <value>編集モード</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>エラー</value>
  </data>
  <data name="ErrorInfo" xml:space="preserve">
    <value>エラー情報</value>
  </data>
  <data name="EstablishmentDate" xml:space="preserve">
    <value>設立年月日</value>
  </data>
  <data name="Fax" xml:space="preserve">
    <value>FAX番号</value>
  </data>
  <data name="FilterCondition" xml:space="preserve">
    <value>フィルタ条件</value>
  </data>
  <data name="Grid" xml:space="preserve">
    <value>表</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>ヘルプ</value>
  </data>
  <data name="HomePage" xml:space="preserve">
    <value>ホームページ</value>
  </data>
  <data name="Kana" xml:space="preserve">
    <value>カナ</value>
  </data>
  <data name="List" xml:space="preserve">
    <value>一覧</value>
  </data>
  <data name="ListPrice" xml:space="preserve">
    <value>定価</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>ログイン</value>
  </data>
  <data name="LoginId" xml:space="preserve">
    <value>ログインＩＤ</value>
  </data>
  <data name="Mail" xml:space="preserve">
    <value>メールアドレス</value>
  </data>
  <data name="MailAddress" xml:space="preserve">
    <value>メールアドレス</value>
  </data>
  <data name="Maintenance" xml:space="preserve">
    <value>メンテナンス</value>
  </data>
  <data name="Master" xml:space="preserve">
    <value>マスタ</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>メモ</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>受注</value>
  </data>
  <data name="Order_Receipt_Create" xml:space="preserve">
    <value>受注伝票作成</value>
  </data>
  <data name="Order_Receipt_List" xml:space="preserve">
    <value>受注伝票一覧</value>
  </data>
  <data name="PagingText" xml:space="preserve">
    <value>続きを表示</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>パスワード</value>
  </data>
  <data name="PostalCode" xml:space="preserve">
    <value>郵便番号</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>商品</value>
  </data>
  <data name="ProductTag" xml:space="preserve">
    <value>商品タグ</value>
  </data>
  <data name="Product_Master" xml:space="preserve">
    <value>商品マスタ</value>
  </data>
  <data name="Receipt" xml:space="preserve">
    <value>伝票</value>
  </data>
  <data name="Repeater" xml:space="preserve">
    <value>リピーター</value>
  </data>
  <data name="Round" xml:space="preserve">
    <value>四捨五入</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>選択</value>
  </data>
  <data name="ShortName" xml:space="preserve">
    <value>略名</value>
  </data>
  <data name="Sort" xml:space="preserve">
    <value>並び替え</value>
  </data>
  <data name="Tax" xml:space="preserve">
    <value>消費税</value>
  </data>
  <data name="TaxCalcType" xml:space="preserve">
    <value>消費税計算区分</value>
  </data>
  <data name="TaxCalcTypeName" xml:space="preserve">
    <value>消費税計算区分名</value>
  </data>
  <data name="TaxRoundType" xml:space="preserve">
    <value>消費税端数処理区分</value>
  </data>
  <data name="TaxRoundTypeName" xml:space="preserve">
    <value>消費税端数処理区分名</value>
  </data>
  <data name="TaxType" xml:space="preserve">
    <value>消費税区分</value>
  </data>
  <data name="TaxTypeName" xml:space="preserve">
    <value>消費税区分名</value>
  </data>
  <data name="Tel" xml:space="preserve">
    <value>電話番号</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>区分</value>
  </data>
  <data name="Undo" xml:space="preserve">
    <value>戻す</value>
  </data>
</root>